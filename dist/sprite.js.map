{"version":3,"sources":["sprite.ts"],"names":[],"mappings":"AAAA,QAAQ;AACR;IAYI,gBAAY,OAAY,EAAE,GAAW;QATrC,MAAC,GAAW,CAAC,CAAC,CAAA,KAAK;QACnB,MAAC,GAAW,CAAC,CAAC,CAAA,KAAK;QACnB,MAAC,GAAW,CAAC,CAAC,CAAA,KAAK;QACnB,MAAC,GAAW,CAAC,CAAC,CAAA,IAAI;QAClB,OAAE,GAAW,CAAC,CAAC,CAAA,MAAM;QACrB,OAAE,GAAW,CAAC,CAAC,CAAA,MAAM;QACrB,OAAE,GAAW,CAAC,CAAC,CAAA,MAAM;QACrB,OAAE,GAAW,CAAC,CAAC,CAAA,MAAM;QAGjB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IACD,uBAAM,GAAN,UAAO,GAAW;QACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,uBAAM,GAAN,UAAO,GAAW;QACd,aAAa;QACb,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QAEnB,4CAA4C;QAC5C,sBAAsB;QACtB,mCAAmC;QACnC,0CAA0C;QAC1C,2CAA2C;QAC3C,IAAI;QACJ,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG;YACd,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACzB,CAAC,CAAA;QACD,4CAA4C;QAC5C,sBAAsB;IAC1B,CAAC;IACD,wBAAO,GAAP,UAAQ,CAAC,EAAE,CAAC;QACR,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IACD,2BAAU,GAAV,UAAW,EAAE,EAAE,EAAE;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;IACD,4BAAW,GAAX,UAAY,CAAC,EAAE,CAAC;QACZ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IACD,qBAAI,GAAJ;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACzG,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO;YACP,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC;QACD,0CAA0C;QAC1C,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACL,aAAC;AAAD,CA3DA,AA2DC,IAAA","file":"sprite.js","sourcesContent":["//sprite\r\nclass Sprite {\r\n    ///\r\n    context: any;//画布对象\r\n    x: number = 0;//x坐标\r\n    y: number = 0;//y坐标\r\n    w: number = 0;//宽度 \r\n    h: number = 0;//高度\r\n    sw: number = 0;//剪裁的宽\r\n    sh: number = 0;//前裁的高\r\n    sx: number = 0;//剪裁的x\r\n    sy: number = 0;//前裁的y\r\n    img: any;//图像地址\r\n    constructor(context: any, url: string) {\r\n        this.getImg(url);\r\n        this.context = context;\r\n    }\r\n    setImg(url: string) {\r\n        this.getImg(url);\r\n    }\r\n    getImg(url: string): void {\r\n        //地址转换成img对象 \r\n        this.img = new Image();\r\n        this.img.src = url;\r\n\r\n        // this.img = document.createElement('img');\r\n        // this.img.src = url;\r\n        // console.log(this.img.readyState)\r\n        // this.img.onreadystatechange=function(){\r\n        //     console.log(222,this.img.readyState)\r\n        // }\r\n        this.img.onload = function () {\r\n            console.log('loaded')\r\n        }\r\n        // this.img = document.createElement('img');\r\n        // this.img.src = url;\r\n    }\r\n    setSize(w, h) {\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n    setCutSize(sw, sh) {\r\n        this.sw = sw;\r\n        this.sh = sh;\r\n    }\r\n    setPosition(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    draw() {\r\n        this.context.save();\r\n        if (this.sw && this.sh) {\r\n            this.context.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\r\n        } else {\r\n            //不需要剪切\r\n            this.context.drawImage(this.img, this.x, this.y, this.w, this.h);\r\n        }\r\n        // this.context.drawImage(this.img,10,10);\r\n        this.context.restore();\r\n    }\r\n}"]}