{"version":3,"sources":["headofoperations/headofoperations.ts"],"names":["Ball","_super","context","w","h","name","url","score","call","this","Date","getTime","toString","substr","setSize","shape","SHAPE","circle","__extends","prototype","draw","angle","text","WriteText","write","x","y","r","drop","v","setPosition","eat","_this","setImg","setTimeout","Math","sqrt","Sprite","Robot","undefined","vx","vy","floor","random","index","names","length","splice","trans","atan2","move","stage","cos","sin","max","min","width","height","G","apply","arguments","roleSize","av","ballList","zdList","robotList","decompose","decomposeV","newGame","init","createRole","createRobot","createAccelerate","accelerate","Accelerate","view","appendChild","create","e","i","robot","push","role","console","log","ball","running","createBallList","drawBallList","checkHits","drawZdList","drawRobot","moveScreen","scoreScreen","change","clientHeight","clientWidth","maxx","maxy","elem","style","left","top","forEach","item","createZd","zd","keyx","keyy","hits","j","over","obj","count","controlStage","getAngle","gameOver","gameOverStage","setText","remove","loading","JY","startCallback","endCallback","document","createElement","className","position","right","bottom","addEventListener","parentNode","removeChild","getElementById","offsetWidth","offsetHeight","Stage","descript","Discript","GameOver","title","Title","control","Control","rect","game","files","image","setup"],"mappings":"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","file":"headofoperations.js","sourcesContent":["/// <reference path=\"../../src/index.ts\" />\r\n/// <reference path=\"names.ts\" />\r\n(function () {\r\n    class Ball extends Sprite {\r\n        name: string = \"游客\" + (new Date().getTime()).toString().substr(-5);\r\n        url: string;\r\n        score: number = 0;\r\n        constructor(context: any, w: number, h: number, name?: string, url: string = 'head-a.png', score: number = 10) {\r\n            super(context, url);\r\n            this.score = score;\r\n            this.setSize();\r\n            this.url = url;\r\n            this.shape = SHAPE.circle;\r\n            this.name = name || this.name;\r\n        }\r\n        draw(angle?: number) {\r\n            this.setSize();\r\n            super.draw(angle);\r\n            let text = new WriteText(this.context);\r\n            text.write(this.name, this.x, this.y + this.r, null, '#cccccc')\r\n        }\r\n        drop(v: number) {\r\n            this.setPosition(this.x, this.y + v)\r\n        }\r\n        eat(url: string = 'eat-a.png') {\r\n            this.setImg(url);\r\n            setTimeout(() => this.setImg(this.url), 300);\r\n        }\r\n        setSize() {\r\n            //1分相当于math.pi*5*5\r\n            let r = Math.sqrt(this.score) * 5;\r\n            super.setSize(2 * r, 2 * r);\r\n        }\r\n    }\r\n    //机器人\r\n    class Robot extends Ball {\r\n        score: number = 0;\r\n        angle: number = 0;\r\n        v: number = 1;\r\n        vx: number = this.v;\r\n        vy: number = this.v;\r\n        constructor(public context: any) {\r\n            super(context, 10, 10, undefined, 'head.png');\r\n            let score = 10 + Math.floor(Math.random() * 10);\r\n            this.score = score;\r\n            let index = Math.floor(Math.random() * names.length - 1);;\r\n            this.name = names[index];\r\n            names.splice(index, 1);\r\n            this.trans();\r\n            this.setSize();\r\n        }\r\n        //随机更换方向\r\n        trans() {\r\n            this.angle = Math.atan2(-1 + Math.random() * 2, -1 + Math.random() * 2);\r\n            return this.angle;\r\n        }\r\n        move(stage: Stage) {\r\n            let angle = 0;\r\n            if (Math.random() * 1000 < 3) {\r\n                this.trans();\r\n            }\r\n            angle = - this.angle;\r\n            if (angle != 0) {\r\n                this.vx = Math.cos(angle) * this.v;\r\n                this.vy = Math.sin(angle) * this.v;\r\n            }\r\n            this.x = this.vx + this.x;\r\n            this.y = this.y - this.vy;\r\n            this.x = Math.max(0, this.x);\r\n            this.x = Math.min(this.x, stage.width - this.w);\r\n            this.y = Math.max(0, this.y);\r\n            this.y = Math.min(this.y, stage.height - this.h);\r\n            if (this.x == 0 || this.y == 0 || this.x == stage.width - this.w || this.y == stage.height - this.h) {\r\n                // console.log(this.x,this.y)\r\n                this.trans();\r\n            }\r\n        }\r\n        draw() {\r\n            super.draw(this.angle);\r\n        }\r\n        eat() {\r\n            super.eat('eat.png')\r\n        }\r\n    }\r\n    class G extends JY {\r\n        interval: 15;\r\n        role: Ball;\r\n        roleSize: number = 10;\r\n        v: number = 1;//速度 \r\n        av: number = 0;//加速度\r\n        vx: number = this.v;\r\n        vy: number = this.v;\r\n        ballList: Array<Sprite> = [];\r\n        score: number = 10;\r\n        zdList: Array<Sprite> = [];\r\n        angle: number;\r\n        robotList: Array<Robot> = [];\r\n        accelerate: Accelerate;\r\n        decompose: boolean = false;\r\n        decomposeV: number = 0;//分解速度\r\n        newGame() {\r\n            this.init();\r\n            this.createRole();\r\n            //创建5个炸弹\r\n            // this.createZd();\r\n            this.createRobot();\r\n            super.newGame();\r\n            //\r\n            this.createAccelerate()//创建加速器\r\n        }\r\n        createAccelerate() {\r\n            this.accelerate = new Accelerate();\r\n            this.view.appendChild(this.accelerate.create((e) => {\r\n                this.v = 5;\r\n                this.decompose = true;\r\n            }, (e) => {\r\n                this.v = 1;\r\n                this.decompose = false;\r\n            }));\r\n        }\r\n        init() {\r\n            this.score = 10;\r\n            this.ballList = [];\r\n            this.zdList = [];\r\n            this.robotList = [];\r\n        }\r\n        createRobot() {\r\n            for (let i = this.robotList.length; i < 15; i++) {\r\n                let robot = new Robot(this.context);\r\n                robot.x = Math.random() * this.stage.width;\r\n                robot.y = Math.random() * this.stage.height;\r\n                robot.r = robot.h / 2;\r\n                this.robotList.push(robot);\r\n            }\r\n            this.decomposeV++;\r\n            //加速时分解\r\n            if (this.decompose && this.decomposeV >= 5 && this.role.score>0) {\r\n                // debugger;\r\n                console.log('分解了')\r\n                this.decomposeV = 0;\r\n                let ball: Sprite = new Sprite(this.context, 'head.png');\r\n                ball.setSize(5, 5);\r\n                ball.x = this.vx > 0 ? this.role.x + this.role.r - 1 * (this.vx + this.role.w) : this.role.x + this.role.w - this.vx;\r\n                ball.y = this.vy < 0 ? this.role.y + this.role.r - 1 * (this.vy + this.role.h) : this.role.y + this.role.h + this.vy;\r\n                ball.shape = SHAPE.circle;\r\n                ball.setPosition(ball.x, ball.y);\r\n                this.ballList.push(ball);\r\n                this.role.score--;\r\n                this.role.setSize();\r\n            }\r\n        }\r\n        createRole() {\r\n            // this.role = new Sprite(this.context, 'head.png');\r\n            this.role = new Ball(this.context, this.roleSize, this.roleSize);\r\n            this.role.x = this.stage.width / 2;\r\n            this.role.y = this.stage.height / 2;\r\n            this.role.r = this.role.h / 2;\r\n        }\r\n        running() {\r\n            // console.log(this.controlStage.getAngle())\r\n            super.running();\r\n            this.move()\r\n            this.role.draw(this.angle);\r\n            this.createBallList();//创建小点点\r\n            this.drawBallList();\r\n            //吃小点\r\n            this.checkHits();\r\n            this.drawZdList();\r\n            //robot\r\n            this.drawRobot();\r\n            this.createRobot();\r\n            //移动视窗\r\n            this.moveScreen();\r\n\r\n            this.scoreScreen.change('得分：' + this.role.score.toString());\r\n        }\r\n        moveScreen() {\r\n            let h = this.view.clientHeight;\r\n            let w = this.view.clientWidth;\r\n            let x = Math.floor(this.role.x+this.role.r - w / 2);\r\n            let y = Math.floor(this.role.y+this.role.r - h / 2);\r\n            let maxx = this.stage.width - w;\r\n            let maxy = this.stage.height - h;\r\n            this.stage.elem.style.left = -Math.min(maxx, Math.max(0, x)) + 'px';\r\n            this.stage.elem.style.top = -Math.min(maxy, Math.max(0, y)) + 'px';\r\n        }\r\n        drawZdList() {\r\n            this.zdList.forEach(item => {\r\n                item.draw()\r\n            });\r\n        }\r\n        drawRobot() {\r\n            this.robotList.forEach(item => {\r\n                item.move(this.stage)\r\n                item.draw();\r\n            })\r\n        }\r\n        createZd() {\r\n            for (let i = 0; i < 4; i++) {\r\n                let zd: Sprite = new Sprite(this.context, 'zd.png');\r\n                this.zdList.push(zd);\r\n                zd.setSize(10, 10);\r\n                let keyx: number = this.stage.width / 4;\r\n                let keyy: number = this.stage.height / 4;\r\n                if (i == 0) {\r\n                    zd.setPosition(keyx, keyy);\r\n                }\r\n                if (i == 1) {\r\n                    zd.setPosition(this.stage.width - keyx, keyy);\r\n                }\r\n                if (i == 2) {\r\n                    zd.setPosition(keyx, this.stage.height - keyy);\r\n                }\r\n                if (i == 3) {\r\n                    zd.setPosition(this.stage.width - keyx, this.stage.height - keyy);\r\n                }\r\n                zd.shape = SHAPE.circle;\r\n                // console.log(zd.x,zd.y)\r\n            }\r\n        }\r\n        checkHits() {\r\n            this.ballList.forEach((ball, i) => {\r\n                if (this.hits(this.role, ball)) {\r\n                    this.role.score++;\r\n                    this.role.setSize()\r\n                    // delete this.ballList[i];\r\n                    this.ballList.splice(i, 1);\r\n                    this.role.eat();\r\n                }\r\n                this.robotList.forEach((item, j) => {\r\n                    if (this.hits(item, ball)) {\r\n                        item.score++;\r\n                        item.setSize()\r\n                        // delete this.ballList[i];\r\n                        this.ballList.splice(i, 1);\r\n                        item.eat();\r\n                    }\r\n                    if (this.hits(item, this.role)) {\r\n                        if (item.score > this.role.score) {\r\n                            this.over();\r\n                        } else if (item.score < this.role.score) {\r\n                            this.role.score += item.score;\r\n                            this.robotList.splice(j, 1);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            this.robotList.forEach((item, i) => {\r\n                this.robotList.forEach((obj, j) => {\r\n                    if (i != j && this.hits(item, obj) && item.score != obj.score) {\r\n                        if (item.score > obj.score) {\r\n                            item.score += obj.score;\r\n                            this.robotList.splice(j, 1);\r\n                        } else {\r\n                            obj.score += item.score;\r\n                            this.robotList.splice(i, 1);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            this.zdList.forEach((ball) => {\r\n                if (this.hits(this.role, ball)) {\r\n                    this.over();\r\n                }\r\n                this.robotList.forEach((item, i) => {\r\n                    if (this.hits(item, ball)) {\r\n                        this.robotList.splice(i, 1);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        drawBallList() {\r\n            this.ballList.forEach(item => {\r\n                item.draw()\r\n            });\r\n        }\r\n        createBallList() {\r\n            let count: number = 300 - this.ballList.length;\r\n            for (let i = 0; i < count; i++) {\r\n                let ball: Sprite = new Sprite(this.context, 'head.png');\r\n                this.ballList.push(ball);\r\n                ball.setSize(5, 5);\r\n                ball.x = Math.random() * this.stage.width;\r\n                ball.y = Math.random() * this.stage.height;\r\n                ball.shape = SHAPE.circle;\r\n            }\r\n        }\r\n        move() {\r\n            let angle = this.controlStage.getAngle();\r\n            this.angle = -angle;\r\n            if (angle != 0) {\r\n                this.vx = Math.cos(angle) * this.v;\r\n                this.vy = Math.sin(angle) * this.v;\r\n            }\r\n            // console.log(this.angle)\r\n            // return;\r\n            this.role.x = this.vx + this.role.x;\r\n            this.role.y = this.role.y - this.vy;\r\n            this.role.x = Math.max(0, this.role.x);\r\n            this.role.x = Math.min(this.role.x, this.stage.width - this.role.w);\r\n            this.role.y = Math.max(0, this.role.y);\r\n            this.role.y = Math.min(this.role.y, this.stage.height - this.role.h)\r\n        }\r\n        gameOver() {\r\n            super.gameOver();\r\n            this.gameOverStage.setText('得分：' + this.role.score);\r\n            this.accelerate.remove();\r\n        }\r\n        loading() {\r\n            console.log('loading...')\r\n            super.loading();\r\n        }\r\n    }\r\n    //加速面板\r\n    class Accelerate implements IScreen {\r\n        elem: HTMLElement;\r\n        create(startCallback?: Function, endCallback?: Function) {\r\n            this.elem = document.createElement('div');\r\n            this.elem.className = \"accelerate\";\r\n            // this.elem.style.background = 'url(act.png) no-repeaat'\r\n            this.elem.style.position = 'absolute';\r\n            this.elem.style.right = '10%';\r\n            this.elem.style.bottom = '10%';\r\n            this.elem.addEventListener('touchstart', (e) => {\r\n                startCallback(e);\r\n            }, false);\r\n            this.elem.addEventListener('touchend', (e) => {\r\n                endCallback(e);\r\n            }, false);\r\n            return this.elem;\r\n        }\r\n        remove() {\r\n            this.elem && this.elem.parentNode.removeChild(this.elem);\r\n        }\r\n    }\r\n    setTimeout(function () {\r\n        let view = document.getElementById('view');\r\n        let w = view.offsetWidth;\r\n        let h = view.offsetHeight;\r\n        let stage = new Stage(w * 3, h * 3);\r\n        let descript = new Discript('start');\r\n        descript.text = '<p class=\"title\">大头吃小头</p>'\r\n        let gameOver = new GameOver('restart');\r\n        let title = new Title('大头吃小头');\r\n        let control = new Control();\r\n        control.rect = [100, 100]\r\n        let game = new G(view, stage, title, descript, gameOver, control);\r\n        game.files = { image: ['act.png', 'head.png', 'head-a.png', 'eat-a.png', 'eat.png', 'zd.png'] };\r\n        game.setup();\r\n    }, 1000)\r\n})();"]}