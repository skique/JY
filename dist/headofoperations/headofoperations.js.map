{"version":3,"sources":["headofoperations/headofoperations.ts"],"names":["Ball","_super","context","w","h","name","url","score","call","this","Date","getTime","toString","substr","setSize","shape","SHAPE","circle","__extends","prototype","draw","angle","text","WriteText","write","x","y","r","drop","v","setPosition","eat","_this","setImg","setTimeout","Math","sqrt","Sprite","Robot","undefined","vx","vy","floor","random","index","names","length","splice","trans","atan2","move","stage","cos","sin","max","min","width","height","G","apply","arguments","roleSize","av","ballList","zdList","robotList","newGame","init","createRole","createRobot","i","robot","push","role","running","createBallList","drawBallList","checkHits","drawZdList","drawRobot","moveScreen","scoreScreen","change","view","clientHeight","clientWidth","maxx","maxy","elem","style","left","top","forEach","item","createZd","zd","keyx","keyy","ball","hits","j","over","obj","count","controlStage","getAngle","gameOver","gameOverStage","setText","loading","console","log","JY","document","getElementById","offsetWidth","offsetHeight","Stage","descript","Discript","GameOver","title","Title","control","Control","rect","game","files","image","setup"],"mappings":"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","file":"headofoperations.js","sourcesContent":["/// <reference path=\"../../src/index.ts\" />\r\n/// <reference path=\"names.ts\" />\r\n(function () {\r\n    class Ball extends Sprite {\r\n        name: string = \"游客\" + (new Date().getTime()).toString().substr(-5);\r\n        url: string;\r\n        score:number=0;\r\n        constructor(context: any, w: number, h: number, name?: string, url: string = 'head-a.png',score:number=10) {\r\n            super(context, url);\r\n            this.score = score;\r\n            this.setSize();\r\n            this.url = url;\r\n            this.shape = SHAPE.circle;\r\n            this.name = name || this.name;\r\n        }\r\n        draw(angle?: number) {\r\n            this.setSize();\r\n            super.draw(angle);\r\n            let text = new WriteText(this.context);\r\n            text.write(this.name, this.x, this.y + this.r, null, '#cccccc')\r\n        }\r\n        drop(v: number) {\r\n            this.setPosition(this.x, this.y + v)\r\n        }\r\n        eat(url: string = 'eat-a.png') {\r\n            this.setImg(url);\r\n            setTimeout(() => this.setImg(this.url), 300);\r\n        }\r\n        setSize(){\r\n            //1分相当于math.pi*5*5\r\n            let r= Math.sqrt(this.score) *5;\r\n            super.setSize(2*r,2*r);\r\n        }\r\n    }\r\n    //机器人\r\n    class Robot extends Ball {\r\n        score: number = 0;\r\n        angle: number = 0;\r\n        v: number = 1;\r\n        vx: number = this.v;\r\n        vy: number = this.v;\r\n        constructor(public context: any) {\r\n            super(context, 10, 10, undefined, 'head.png');\r\n            let score = 10 + Math.floor(Math.random() * 10);\r\n            this.score = score;\r\n            let index = Math.floor(Math.random() * names.length - 1);;\r\n            this.name = names[index];\r\n            names.splice(index, 1);\r\n            this.trans();\r\n            this.setSize();\r\n        }\r\n        //随机更换方向\r\n        trans() {\r\n            this.angle = Math.atan2(-1 + Math.random() * 2, -1 + Math.random() * 2);\r\n            return this.angle;\r\n        }\r\n        move(stage: Stage) {\r\n            let angle = 0;\r\n            if (Math.random() * 1000 < 3) {\r\n                this.trans();\r\n            }\r\n            angle = - this.angle;\r\n            if (angle != 0) {\r\n                this.vx = Math.cos(angle) * this.v;\r\n                this.vy = Math.sin(angle) * this.v;\r\n            }\r\n            this.x = this.vx + this.x;\r\n            this.y = this.y - this.vy;\r\n            this.x = Math.max(0, this.x);\r\n            this.x = Math.min(this.x, stage.width - this.w);\r\n            this.y = Math.max(0, this.y);\r\n            this.y = Math.min(this.y, stage.height - this.h);\r\n            if (this.x == 0 || this.y == 0 || this.x == stage.width - this.w || this.y == stage.height - this.h) {\r\n                // console.log(this.x,this.y)\r\n                this.trans();\r\n            }\r\n        }\r\n        draw() {\r\n            super.draw(this.angle);\r\n        }\r\n        eat() {\r\n            super.eat('eat.png')\r\n        }\r\n    }\r\n    class G extends JY {\r\n        interval: 15;\r\n        role: Ball;\r\n        roleSize: number = 10;\r\n        v: number = 1;//速度 \r\n        av: number = 0;//加速度\r\n        vx: number = this.v;\r\n        vy: number = this.v;\r\n        ballList: Array<Sprite> = [];\r\n        score: number = 10;\r\n        zdList: Array<Sprite> = [];\r\n        angle: number;\r\n        robotList: Array<Robot> = [];\r\n        newGame() {\r\n            this.init();\r\n            this.createRole();\r\n            //创建5个炸弹\r\n            // this.createZd();\r\n            this.createRobot();\r\n            super.newGame();\r\n        }\r\n        init() {\r\n            this.score = 10;\r\n            this.ballList = [];\r\n            this.zdList = [];\r\n            this.robotList = [];\r\n        }\r\n        createRobot() {\r\n            for (let i = this.robotList.length; i < 15; i++) {\r\n                let robot = new Robot(this.context);\r\n                robot.x = Math.random() * this.stage.width;\r\n                robot.y = Math.random() * this.stage.height;\r\n                robot.r = robot.h / 2;\r\n                this.robotList.push(robot);\r\n            }\r\n        }\r\n        createRole() {\r\n            // this.role = new Sprite(this.context, 'head.png');\r\n            this.role = new Ball(this.context, this.roleSize, this.roleSize);\r\n            this.role.x = this.stage.width / 2;\r\n            this.role.y = this.stage.height / 2;\r\n            this.role.r = this.role.h / 2;\r\n        }\r\n        running() {\r\n            // console.log(this.controlStage.getAngle())\r\n            super.running();\r\n            this.move()\r\n            this.role.draw(this.angle);\r\n            this.createBallList();//创建小点点\r\n            this.drawBallList();\r\n            //吃小点\r\n            this.checkHits();\r\n            this.drawZdList();\r\n            //robot\r\n            this.drawRobot();\r\n            this.createRobot();\r\n            //移动视窗\r\n            this.moveScreen();\r\n\r\n            this.scoreScreen.change('得分：'+this.role.score.toString());\r\n        }\r\n        moveScreen() {\r\n            let h = this.view.clientHeight;\r\n            let w = this.view.clientWidth;\r\n            let x = Math.floor(this.role.x - w / 2);\r\n            let y = Math.floor(this.role.y - h / 2);\r\n            let maxx = this.stage.width - w;\r\n            let maxy = this.stage.height - h;\r\n            this.stage.elem.style.left = -Math.min(maxx, Math.max(0, x)) + 'px';\r\n            this.stage.elem.style.top = -Math.min(maxy, Math.max(0, y)) + 'px';\r\n        }\r\n        drawZdList() {\r\n            this.zdList.forEach(item => {\r\n                item.draw()\r\n            });\r\n        }\r\n        drawRobot() {\r\n            this.robotList.forEach(item => {\r\n                item.move(this.stage)\r\n                item.draw();\r\n            })\r\n        }\r\n        createZd() {\r\n            for (let i = 0; i < 4; i++) {\r\n                let zd: Sprite = new Sprite(this.context, 'zd.png');\r\n                this.zdList.push(zd);\r\n                zd.setSize(10, 10);\r\n                let keyx: number = this.stage.width / 4;\r\n                let keyy: number = this.stage.height / 4;\r\n                if (i == 0) {\r\n                    zd.setPosition(keyx, keyy);\r\n                }\r\n                if (i == 1) {\r\n                    zd.setPosition(this.stage.width - keyx, keyy);\r\n                }\r\n                if (i == 2) {\r\n                    zd.setPosition(keyx, this.stage.height - keyy);\r\n                }\r\n                if (i == 3) {\r\n                    zd.setPosition(this.stage.width - keyx, this.stage.height - keyy);\r\n                }\r\n                zd.shape = SHAPE.circle;\r\n                // console.log(zd.x,zd.y)\r\n            }\r\n        }\r\n        checkHits() {\r\n            this.ballList.forEach((ball, i) => {\r\n                if (this.hits(this.role, ball)) {\r\n                    this.role.score++;\r\n                    this.role.setSize()\r\n                    // delete this.ballList[i];\r\n                    this.ballList.splice(i, 1);\r\n                    this.role.eat();\r\n                }\r\n                this.robotList.forEach((item, j) => {\r\n                    if (this.hits(item, ball)) {\r\n                        item.score++;\r\n                        item.setSize()\r\n                        // delete this.ballList[i];\r\n                        this.ballList.splice(i, 1);\r\n                        item.eat();\r\n                    }\r\n                    if (this.hits(item, this.role)) {\r\n                        if (item.score > this.role.score) {\r\n                            this.over();\r\n                        } else if (item.score < this.role.score) {\r\n                            this.role.score += item.score;\r\n                            this.robotList.splice(j, 1);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            this.robotList.forEach((item, i) => {\r\n                this.robotList.forEach((obj, j) => {\r\n                    if (i != j && this.hits(item, obj) && item.score != obj.score) {\r\n                        if (item.score > obj.score) {\r\n                            item.score += obj.score;\r\n                            this.robotList.splice(j, 1);\r\n                        } else {\r\n                            obj.score += item.score;\r\n                            this.robotList.splice(i, 1);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            this.zdList.forEach((ball) => {\r\n                if (this.hits(this.role, ball)) {\r\n                    this.over();\r\n                }\r\n                this.robotList.forEach((item, i) => {\r\n                    if (this.hits(item, ball)) {\r\n                        this.robotList.splice(i, 1);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        drawBallList() {\r\n            this.ballList.forEach(item => {\r\n                item.draw()\r\n            });\r\n        }\r\n        createBallList() {\r\n            let count: number = 300 - this.ballList.length;\r\n            for (let i = 0; i < count; i++) {\r\n                let ball: Sprite = new Sprite(this.context, 'head.png');\r\n                this.ballList.push(ball);\r\n                ball.setSize(5, 5);\r\n                ball.x = Math.random() * this.stage.width;\r\n                ball.y = Math.random() * this.stage.height;\r\n                ball.shape = SHAPE.circle;\r\n            }\r\n        }\r\n        move() {\r\n            let angle = this.controlStage.getAngle();\r\n            this.angle = -angle;\r\n            if (angle != 0) {\r\n                this.vx = Math.cos(angle) * this.v;\r\n                this.vy = Math.sin(angle) * this.v;\r\n            }\r\n            // console.log(this.angle)\r\n            // return;\r\n            this.role.x = this.vx + this.role.x;\r\n            this.role.y = this.role.y - this.vy;\r\n            this.role.x = Math.max(0, this.role.x);\r\n            this.role.x = Math.min(this.role.x, this.stage.width - this.role.w);\r\n            this.role.y = Math.max(0, this.role.y);\r\n            this.role.y = Math.min(this.role.y, this.stage.height - this.role.h)\r\n        }\r\n        gameOver() {\r\n            super.gameOver();\r\n            this.gameOverStage.setText('得分：' + this.role.score);\r\n        }\r\n        loading() {\r\n            console.log('loading...')\r\n            super.loading();\r\n        }\r\n    }\r\n\r\n    setTimeout(function () {\r\n        let view = document.getElementById('view');\r\n        let w = view.offsetWidth;\r\n        let h = view.offsetHeight;\r\n        let stage = new Stage(w * 3, h * 3);\r\n        let descript = new Discript('start');\r\n        descript.text = '<p class=\"title\">大头吃小头</p>'\r\n        let gameOver = new GameOver('restart');\r\n        let title = new Title('大头吃小头');\r\n        let control = new Control();\r\n        control.rect = [100, 100]\r\n        let game = new G(view, stage, title, descript, gameOver, control);\r\n        game.files = { image: ['head.png', 'head-a.png', 'eat-a.png', 'eat.png', 'zd.png'] };\r\n        game.setup();\r\n    }, 1000)\r\n})();"]}